name: Build
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ANDROID_HOME: /home/runner/.buildozer/android/platform/android-sdk
      JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Java 11
      run: |
        sudo apt-get update
        sudo apt-get install -y openjdk-11-jdk
        java -version

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
          git \
          zip \
          unzip \
          python3-pip \
          autoconf \
          libtool \
          pkg-config \
          zlib1g-dev \
          libncurses5-dev \
          libncursesw5-dev \
          libtinfo5 \
          cmake \
          libffi-dev \
          libssl-dev \
          libsdl2-dev \
          libsdl2-image-dev \
          libsdl2-mixer-dev \
          libsdl2-ttf-dev \
          libportmidi-dev \
          libswscale-dev \
          libavformat-dev \
          libavcodec-dev \
          virtualenv \
          build-essential
        
        python -m pip install --upgrade pip setuptools wheel
        pip install --upgrade Cython==0.29.33 buildozer==1.5.0

    - name: Setup Android SDK
      run: |
        # Create base directory
        mkdir -p "${ANDROID_HOME}"
        cd "${ANDROID_HOME}"
        
        # Download and extract command line tools
        wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip -q commandlinetools-linux-9477386_latest.zip
        
        # Create the required directory structure
        mkdir -p "${ANDROID_HOME}/cmdline-tools/latest"
        mkdir -p "${ANDROID_HOME}/tools/bin"
        
        # Move files to the correct location
        cp -r cmdline-tools/* "${ANDROID_HOME}/cmdline-tools/latest/"
        rm -rf cmdline-tools
        
        # Create symlinks
        ln -sf "${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager" "${ANDROID_HOME}/tools/bin/sdkmanager"
        
        # Set permissions
        chmod +x "${ANDROID_HOME}/cmdline-tools/latest/bin"/*
        chmod +x "${ANDROID_HOME}/tools/bin"/*
        
        # Verify directory structure
        echo "Directory structure:"
        ls -R "${ANDROID_HOME}"
        
        # Accept licenses and install SDK components
        yes | "${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager" \
          --sdk_root="${ANDROID_HOME}" \
          --licenses
        
        "${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager" \
          --sdk_root="${ANDROID_HOME}" \
          "platform-tools" \
          "platforms;android-33" \
          "build-tools;33.0.0"
        
        # Set ownership
        sudo chown -R $USER:$USER "${ANDROID_HOME}"
        
        # Verify installation
        echo "Verifying installation..."
        ls -la "${ANDROID_HOME}/tools/bin/sdkmanager"
        ls -la "${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager"

    - name: Setup buildozer.spec
      run: |
        echo '[app]' > buildozer.spec
        echo 'title = Yoga Timer' >> buildozer.spec
        echo 'package.name = yogatimer' >> buildozer.spec
        echo 'package.domain = org.example' >> buildozer.spec
        echo 'source.dir = .' >> buildozer.spec
        echo 'source.include_exts = py,wav,toml' >> buildozer.spec
        echo 'version = 0.1' >> buildozer.spec
        echo '' >> buildozer.spec
        echo 'requirements = python3,kivy==2.2.1,plyer,android' >> buildozer.spec
        echo '' >> buildozer.spec
        echo 'android.permissions = INTERNET,WRITE_EXTERNAL_STORAGE' >> buildozer.spec
        echo 'p4a.bootstrap = sdl2' >> buildozer.spec
        echo 'android.archs = arm64-v8a' >> buildozer.spec
        echo 'android.api = 33' >> buildozer.spec
        echo 'android.minapi = 21' >> buildozer.spec
        echo 'android.ndk = 25b' >> buildozer.spec
        echo 'android.accept_sdk_license = True' >> buildozer.spec
        echo 'android.skip_update = True' >> buildozer.spec
        echo "android.sdk_path = ${ANDROID_HOME}" >> buildozer.spec
        echo 'android.gradle_dependencies = androidx.core:core:1.6.0' >> buildozer.spec
        echo 'android.enable_androidx = True' >> buildozer.spec
        echo '' >> buildozer.spec
        echo 'android.presplash_color = #FFFFFF' >> buildozer.spec
        echo 'android.orientation = portrait' >> buildozer.spec
        echo '' >> buildozer.spec
        echo '[buildozer]' >> buildozer.spec
        echo 'log_level = 2' >> buildozer.spec
        echo 'warn_on_root = 1' >> buildozer.spec

    - name: Build APK
      env:
        PATH: ${ANDROID_HOME}/cmdline-tools/latest/bin:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools:${PATH}
      run: |
        echo "=== Environment Verification ==="
        echo "ANDROID_HOME: ${ANDROID_HOME}"
        echo "PATH: ${PATH}"
        echo "Current directory: $(pwd)"
        echo "SDK directory contents:"
        ls -R "${ANDROID_HOME}"
        buildozer android debug -v

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app
        path: bin/*.apk
