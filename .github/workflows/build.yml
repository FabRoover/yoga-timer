name: Build
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ANDROID_HOME: /home/runner/.buildozer/android/platform/android-sdk
      JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Java 11
      run: |
        sudo apt-get update
        sudo apt-get install -y openjdk-11-jdk
        /usr/bin/java -version

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
          git \
          zip \
          unzip \
          python3-pip \
          autoconf \
          libtool \
          pkg-config \
          zlib1g-dev \
          libncurses5-dev \
          libncursesw5-dev \
          libtinfo5 \
          cmake \
          libffi-dev \
          libssl-dev \
          libsdl2-dev \
          libsdl2-image-dev \
          libsdl2-mixer-dev \
          libsdl2-ttf-dev \
          libportmidi-dev \
          libswscale-dev \
          libavformat-dev \
          libavcodec-dev \
          virtualenv \
          build-essential
        
        /usr/bin/python3 -m pip install --upgrade pip setuptools wheel
        /usr/bin/python3 -m pip install --upgrade Cython==0.29.33 buildozer==1.5.0

    - name: Setup Android SDK
      run: |
        # Create temporary directory for download
        TEMP_DIR="/tmp/android_cmdline_tools"
        /usr/bin/mkdir -p "${TEMP_DIR}"
        cd "${TEMP_DIR}"
        
        # Download and extract command line tools
        /usr/bin/wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        /usr/bin/unzip -q commandlinetools-linux-9477386_latest.zip
        
        # Create SDK directory structure
        /usr/bin/mkdir -p "${ANDROID_HOME}/cmdline-tools"
        /usr/bin/mkdir -p "${ANDROID_HOME}/tools/bin"
        
        # Move the files to the correct location
        /usr/bin/mv cmdline-tools "${ANDROID_HOME}/cmdline-tools/latest"
        
        # Create symbolic links
        /usr/bin/ln -sf "${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager" "${ANDROID_HOME}/tools/bin/sdkmanager"
        
        # Set permissions
        /usr/bin/chmod +x "${ANDROID_HOME}/cmdline-tools/latest/bin"/*
        /usr/bin/chmod +x "${ANDROID_HOME}/tools/bin"/*
        
        # Clean up temporary directory
        cd /home/runner/work/yoga-timer/yoga-timer
        /usr/bin/rm -rf "${TEMP_DIR}"
        
        # Accept licenses and install SDK components
        "${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager" \
          --sdk_root="${ANDROID_HOME}" \
          "platform-tools" \
          "platforms;android-33" \
          "build-tools;33.0.0"
        
        # Set ownership
        sudo /usr/bin/chown -R $USER:$USER "${ANDROID_HOME}"
        
        # Verify final setup
        /usr/bin/find "${ANDROID_HOME}" -type f -name "sdkmanager"

    - name: Setup buildozer.spec
      run: |
        cat > buildozer.spec << EOF
[app]
title = Yoga Timer
package.name = yogatimer
package.domain = org.example
source.dir = .
source.include_exts = py,wav,toml
version = 0.1

requirements = python3,kivy==2.2.1,plyer,android

android.permissions = INTERNET,WRITE_EXTERNAL_STORAGE
p4a.bootstrap = sdl2
android.archs = arm64-v8a
android.api = 33
android.minapi = 21
android.ndk = 25b
android.accept_sdk_license = True
android.skip_update = True
android.sdk_path = $ANDROID_HOME
android.gradle_dependencies = androidx.core:core:1.6.0
android.enable_androidx = True

android.presplash_color = #FFFFFF
android.orientation = portrait

[buildozer]
log_level = 2
warn_on_root = 1
EOF

    - name: Build APK
      env:
        PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:${ANDROID_HOME}/cmdline-tools/latest/bin:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools
      run: |
        echo "=== Environment Verification ==="
        echo "ANDROID_HOME: ${ANDROID_HOME}"
        echo "PATH: ${PATH}"
        echo "Current directory: $(/usr/bin/pwd)"
        echo "SDK directory contents:"
        /usr/bin/find "${ANDROID_HOME}" -ls
        /usr/local/bin/buildozer android debug -v

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app
        path: bin/*.apk
